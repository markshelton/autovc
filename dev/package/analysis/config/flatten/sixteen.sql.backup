--sixteen - flatten

/*
--merge_keys
company_name - DONE
cb_url - DONE

--classification
is_operating - DONE
was_acquired - DONE
was_ipo - DONE
was_exited - DONE
raised_series-a - DONE
raised_series-b - DONE
raised_series-c+ - DONE

--regression
employee_count - DONE
funding_rounds - DONE
funding_total_usd - DONE
ipo_valuation - DONE
acquisition_valuation - DONE
time_to_ipo - DONE
time_to_acquisition - DONE
survival_time - DONE
time_to_exit - DONE
*/

DROP TABLE IF EXISTS organizations_plus;
DROP TABLE IF EXISTS acquisitions_plus;
DROP TABLE IF EXISTS funding_rounds_plus;
DROP TABLE IF EXISTS ipos_plus;
DROP TABLE IF EXISTS sixteen;

CREATE TABLE organizations_plus
AS
    SELECT
        organizations.uuid as company_id,
        organizations.company_name as keys_company_name_id,
        organizations.cb_url as keys_cb_url_id,
        strftime('%s', organizations.updated_at) as keys_now_date,
        (case when organizations.status = "closed" then 1 else 0 end) as outcome_closed_bool,
        (case when organizations.status = "operating" then 1 else 0 end) as outcome_operating_bool,
        (case when organizations.status = "acquired" then 1 else 0 end) as outcome_acquired_bool,
        (case when organizations.status = "ipo" then 1 else 0 end) as outcome_ipo_bool,
        (case when organizations.status = "acquired" or organizations.status = "ipo" then 1 else 0 end) as outcome_exit_bool,
        organizations.employee_count as outcome_employee_count_number,
        organizations.funding_rounds as outcome_funding_rounds_number,
        organizations.funding_total_usd as outcome_funding_total_usd_number,
        (strftime('%s', organizations.closed_on) - strftime('%s', organizations.founded_on)) as outcome_survival_duration
    FROM organizations
;

CREATE TABLE acquisitions_plus
AS
    SELECT
        organizations.uuid as company_acquisitions_id,
        acquisitions.price_usd as outcome_acquisitions_valuation_number,
        (strftime('%s', acquisitions.acquired_on) - strftime('%s', organizations.founded_on)) as outcome_acquisition_duration
    FROM acquisitions
    LEFT OUTER JOIN organizations ON acquisitions.acquiree_uuid = organizations.uuid
    GROUP BY organizations.uuid
;


CREATE TABLE funding_rounds_plus
AS
    SELECT
        organizations.uuid as company_funding_rounds_id,
        (case when funding_rounds.funding_round_code = "A" then 1 else 0 end) as outcome_raise_a_bool,
        (case when funding_rounds.funding_round_code = "B" then 1 else 0 end) as outcome_raise_b_bool,
        (case when funding_rounds.funding_round_code != "A" and funding_rounds.funding_round_code != "B" and funding_rounds.funding_round_code != Null then 1 else 0 end) as outcome_raise_cplus_bool
    FROM funding_rounds
    LEFT OUTER JOIN organizations ON funding_rounds.company_uuid = organizations.uuid
    GROUP BY organizations.uuid
;

CREATE TABLE ipos_plus
AS
    SELECT
        organizations.uuid as company_ipos_id,
        ipos.price_usd as outcome_ipo_valuation_number,
        (strftime('%s', ipos.went_public_on) - strftime('%s', organizations.founded_on)) as outcome_ipo_duration
    FROM ipos
    LEFT OUTER JOIN organizations ON ipos.company_uuid = organizations.uuid
    GROUP BY organizations.uuid
;

CREATE TABLE sixteen
AS
    SELECT *,
        organizations_plus.company_id as keys_company_uuid_id,
        max(acquisitions_plus.outcome_acquisition_duration, ipos_plus.outcome_ipo_duration) as outcome_exit_duration
    FROM organizations_plus
    LEFT OUTER JOIN acquisitions_plus ON organizations_plus.company_id = acquisitions_plus.company_acquisitions_id
    LEFT OUTER JOIN funding_rounds_plus ON organizations_plus.company_id = funding_rounds_plus.company_funding_rounds_id
    LEFT OUTER JOIN ipos_plus ON organizations_plus.company_id = ipos_plus.company_ipos_id
    GROUP BY organizations_plus.company_id
;

DROP TABLE IF EXISTS organizations_plus;
DROP TABLE IF EXISTS acquisitions_plus;
DROP TABLE IF EXISTS funding_rounds_plus;
DROP TABLE IF EXISTS ipos_plus;